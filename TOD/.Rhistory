library(gridExtra)
library(cowplot)
library(geosphere)
library(dplyr)
options(scipen=999) # a penalty for printing scientific notation
options(tigris_class = "sf") # tells the tigris package to return spatial data as an sf object
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#f0f9e8","#bae4bc","#7bccc4","#43a2ca","#0868ac")
# 2012 Census Data
tracts12 <-
get_acs(geography = "tract",
variables = c("B25026_001E","B19013_001E",
"B25058_001E","B25002_001E"),
year=2012,
state=06,
county=075,
geometry=TRUE,
output="wide") %>%
st_transform('EPSG:7132') %>%
filter(!str_detect(GEOID, "06075980401|06075990100|06075017902")) %>%
rename(TotalPop = B25026_001E,
MedHHInc = B19013_001E,
MedRent = B25058_001E,
TotalHU = B25002_001E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(year = "2012")
# 2022 Census Data
tracts22 <-
get_acs(geography = "tract",
variables = c("B25026_001E","B19013_001E",
"B25058_001E","B25002_001E"),
year=2022,
state=06,
county=075,
geometry=TRUE,
output="wide") %>%
st_transform('EPSG:7132') %>%
filter(!str_detect(GEOID, "06075980401|06075990100|06075017902|06075017903")) %>%
rename(TotalPop = B25026_001E,
MedHHInc = B19013_001E,
MedRent = B25058_001E,
TotalHU = B25002_001E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(year = "2022")
# combine the data
allTracts <- rbind(tracts12,tracts22)
# Passenger Rail Stations (2019)
Muni_Metro <- st_read("https://opendata.arcgis.com/datasets/efd75b7bb3c04dbda06c6e7cd73e9336_0.geojson") %>%
st_transform(st_crs(tracts12))
# Select what I need
Muni_Metro <- st_filter(Muni_Metro, st_union(tracts12)) %>%
mutate(Line = "Muni_Metro") %>%
dplyr::select(station_na, mode, Line)
# 0.5 mile buffer
stopBuffer <- st_buffer(Muni_Metro, 2640)
stopUnion <- st_union(st_buffer(Muni_Metro, 2640))
muniBuffers <-
rbind(
stopBuffer %>%
mutate(Legend = "Buffer") %>%
dplyr::select(Legend),
stopUnion %>%
st_sf() %>%
mutate(Legend = "Unioned Buffer"))
# Using the `sf` Package for Spatial operations
buffer <- filter(muniBuffers, Legend=="Unioned Buffer")
# Spatial intersection with `st_centroid()` on polygon centroids
# 2012
selectCentroids.12 <-
st_centroid(tracts12)[buffer,] %>%
st_drop_geometry() %>%
left_join(., dplyr::select(tracts22, GEOID), by = "GEOID") %>%
st_sf() %>%
dplyr::select(TotalPop) %>%
mutate(Selection_Type = "Select by Centroids_2012")
# 2022
selectCentroids.22 <-
st_centroid(tracts22)[buffer,] %>%
st_drop_geometry() %>%
left_join(., dplyr::select(tracts22, GEOID), by = "GEOID") %>%
st_sf() %>%
dplyr::select(TotalPop) %>%
mutate(Selection_Type = "Select by Centroids_2022")
allTracts.group <-
rbind(
st_centroid(allTracts)[buffer,] %>%
st_drop_geometry() %>%
left_join(allTracts) %>%
st_sf() %>%
mutate(TOD = "TOD"),
st_centroid(allTracts)[buffer, op = st_disjoint] %>%
st_drop_geometry() %>%
left_join(allTracts) %>%
st_sf() %>%
mutate(TOD = "Non-TOD")) %>%
mutate(MedRent.inf = ifelse(year == "2012", MedRent * 1.24, MedRent))
# Compute MRB
muni_MRB <- multipleRingBuffer(st_union(Muni_Metro),
maxDistance = 18480,
interval =  2640)
# Summarizing data
# 2012 data
tracts12.rings <- tracts12 %>%
select(GEOID, year) %>%
st_centroid() %>%
st_join(muni_MRB, join = st_intersects) %>%
st_drop_geometry() %>%
left_join(dplyr::select(tracts12, GEOID, MedRent, year),
by=c("GEOID"="GEOID", "year"="year")) %>%
st_sf() %>%
mutate(distance = distance / 5280) #convert to miles
tracts12.rings.summary <- st_drop_geometry(tracts12.rings) %>%
group_by(distance, year) %>%
summarize(Mean_Rent = mean(MedRent, na.rm=T))
# 2022 data
tracts22.rings <- tracts22 %>%
select(GEOID, year) %>%
st_centroid() %>%
st_join(muni_MRB, join = st_intersects) %>%
st_drop_geometry() %>%
left_join(dplyr::select(tracts22, GEOID, MedRent, year),
by=c("GEOID"="GEOID", "year"="year")) %>%
st_sf() %>%
mutate(distance = distance / 5280) #convert to miles
tracts22.rings.summary <- st_drop_geometry(tracts22.rings) %>%
group_by(distance, year) %>%
summarize(Mean_Rent = mean(MedRent, na.rm=T))
# combine data
tracts.rings.summary <- rbind(tracts12.rings.summary, tracts22.rings.summary)
# plot
ggplot(tracts.rings.summary,
aes(distance, Mean_Rent, colour=year)) +
geom_point(size=2) +
geom_line(size=1) +
scale_color_manual(values = c("#7bccc4", "#0868ac"))+
labs(title = "Mean rent as a function of distance to subway stations",
subtitle = "San Francisco, 2012 & 2022",
caption = "Figure 3.4") +
plotTheme()
create_plot <- function(data, aes_fill, label) {
ggplot(data) +
geom_sf(data = st_union(tracts22)) +
geom_sf(aes(fill = q5(.data[[aes_fill]]))) +
geom_sf(data = buffer, fill = "transparent", color = "red") +
scale_fill_manual(values = palette5,
labels = qBr(data, aes_fill),
name = label) +
facet_wrap(~year) +
mapTheme() +
labs(title = label) +
theme(plot.title = element_text(size=12, face = "bold"),
strip.text.x = element_text(size = 10, margin = margin(0.05,0,0.05,0, "cm")),
legend.position = "bottom",
legend.key.size = unit(0.2, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),
legend.margin = margin(t = -5)) +
guides(fill = guide_legend(nrow = 1))
}
# Generate each plot using the function
plot_a <- create_plot(allTracts.group, "TotalPop", "Total Population") +
theme(plot.margin = margin(25, 0, 0, 0))
plot_b <- create_plot(allTracts.group, "MedRent.inf", "Median Rent (Real Dollars)") +
theme(plot.margin = margin(25, 0, 0, 0))
plot_c <- create_plot(allTracts.group, "MedHHInc", "Median Household Income") +
theme(plot.margin = margin(10, 0, 20, 0))
plot_d <- create_plot(allTracts.group, "TotalHU", "Total Housing Units") +
theme(plot.margin = margin(10, 0, 20, 0))
# Combine all plots into a grid layout
combined_plots <- plot_grid(plot_a, plot_b, plot_c, plot_d, ncol = 2)
# Add title and caption
final_plot <- ggdraw() +
draw_plot(combined_plots) +
draw_label("Four small-multiple visualizations across time and space", x = 0.5, y = 0.98, size = 16) +
draw_label("Calculation method: quintile breaks (Figure 3.1)", x = 0.5, y = 0.02, fontface = 'italic', size = 9)
# Print the final plot with title and caption
print(final_plot)
allTracts.Summary %>%
gather(Variable, Value, -year, -TOD) %>%
ggplot(aes(year, Value, fill = TOD)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~Variable, scales = "free", ncol=5) +
scale_fill_manual(values = c("#bae4bc", "#43a2ca")) +
labs(title = "Indicator differences across time and space",
caption = "Table 3.2") +
plotTheme() +
theme(legend.position="bottom")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
file.create("references.bib")
allTracts.Diff <- allTracts.Summary %>%
pivot_wider(names_from = TOD, values_from = c(Rent, Population, Income, Housing))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE)
# Load packages and functions
library(tidyverse)
library(tidycensus)
library(sf)
library(kableExtra)
library(gridExtra)
library(cowplot)
library(geosphere)
library(dplyr)
options(scipen=999) # a penalty for printing scientific notation
options(tigris_class = "sf") # tells the tigris package to return spatial data as an sf object
source("https://raw.githubusercontent.com/urbanSpatial/Public-Policy-Analytics-Landing/master/functions.r")
palette5 <- c("#f0f9e8","#bae4bc","#7bccc4","#43a2ca","#0868ac")
# 2012 Census Data
tracts12 <-
get_acs(geography = "tract",
variables = c("B25026_001E","B19013_001E",
"B25058_001E","B25002_001E"),
year=2012,
state=06,
county=075,
geometry=TRUE,
output="wide") %>%
st_transform('EPSG:7132') %>%
filter(!str_detect(GEOID, "06075980401|06075990100|06075017902")) %>%
rename(TotalPop = B25026_001E,
MedHHInc = B19013_001E,
MedRent = B25058_001E,
TotalHU = B25002_001E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(year = "2012")
# 2022 Census Data
tracts22 <-
get_acs(geography = "tract",
variables = c("B25026_001E","B19013_001E",
"B25058_001E","B25002_001E"),
year=2022,
state=06,
county=075,
geometry=TRUE,
output="wide") %>%
st_transform('EPSG:7132') %>%
filter(!str_detect(GEOID, "06075980401|06075990100|06075017902|06075017903")) %>%
rename(TotalPop = B25026_001E,
MedHHInc = B19013_001E,
MedRent = B25058_001E,
TotalHU = B25002_001E) %>%
dplyr::select(-NAME, -starts_with("B")) %>%
mutate(year = "2022")
# combine the data
allTracts <- rbind(tracts12,tracts22)
# Passenger Rail Stations (2019)
Muni_Metro <- st_read("https://opendata.arcgis.com/datasets/efd75b7bb3c04dbda06c6e7cd73e9336_0.geojson") %>%
st_transform(st_crs(tracts12))
# Select what I need
Muni_Metro <- st_filter(Muni_Metro, st_union(tracts12)) %>%
mutate(Line = "Muni_Metro") %>%
dplyr::select(station_na, mode, Line)
# 0.5 mile buffer
stopBuffer <- st_buffer(Muni_Metro, 2640)
stopUnion <- st_union(st_buffer(Muni_Metro, 2640))
muniBuffers <-
rbind(
stopBuffer %>%
mutate(Legend = "Buffer") %>%
dplyr::select(Legend),
stopUnion %>%
st_sf() %>%
mutate(Legend = "Unioned Buffer"))
# Using the `sf` Package for Spatial operations
buffer <- filter(muniBuffers, Legend=="Unioned Buffer")
# Spatial intersection with `st_centroid()` on polygon centroids
# 2012
selectCentroids.12 <-
st_centroid(tracts12)[buffer,] %>%
st_drop_geometry() %>%
left_join(., dplyr::select(tracts22, GEOID), by = "GEOID") %>%
st_sf() %>%
dplyr::select(TotalPop) %>%
mutate(Selection_Type = "Select by Centroids_2012")
# 2022
selectCentroids.22 <-
st_centroid(tracts22)[buffer,] %>%
st_drop_geometry() %>%
left_join(., dplyr::select(tracts22, GEOID), by = "GEOID") %>%
st_sf() %>%
dplyr::select(TotalPop) %>%
mutate(Selection_Type = "Select by Centroids_2022")
allTracts.group <-
rbind(
st_centroid(allTracts)[buffer,] %>%
st_drop_geometry() %>%
left_join(allTracts) %>%
st_sf() %>%
mutate(TOD = "TOD"),
st_centroid(allTracts)[buffer, op = st_disjoint] %>%
st_drop_geometry() %>%
left_join(allTracts) %>%
st_sf() %>%
mutate(TOD = "Non-TOD")) %>%
mutate(MedRent.inf = ifelse(year == "2012", MedRent * 1.24, MedRent))
# Compute MRB
muni_MRB <- multipleRingBuffer(st_union(Muni_Metro),
maxDistance = 18480,
interval =  2640)
# Summarizing data
# 2012 data
tracts12.rings <- tracts12 %>%
select(GEOID, year) %>%
st_centroid() %>%
st_join(muni_MRB, join = st_intersects) %>%
st_drop_geometry() %>%
left_join(dplyr::select(tracts12, GEOID, MedRent, year),
by=c("GEOID"="GEOID", "year"="year")) %>%
st_sf() %>%
mutate(distance = distance / 5280) #convert to miles
tracts12.rings.summary <- st_drop_geometry(tracts12.rings) %>%
group_by(distance, year) %>%
summarize(Mean_Rent = mean(MedRent, na.rm=T))
# 2022 data
tracts22.rings <- tracts22 %>%
select(GEOID, year) %>%
st_centroid() %>%
st_join(muni_MRB, join = st_intersects) %>%
st_drop_geometry() %>%
left_join(dplyr::select(tracts22, GEOID, MedRent, year),
by=c("GEOID"="GEOID", "year"="year")) %>%
st_sf() %>%
mutate(distance = distance / 5280) #convert to miles
tracts22.rings.summary <- st_drop_geometry(tracts22.rings) %>%
group_by(distance, year) %>%
summarize(Mean_Rent = mean(MedRent, na.rm=T))
# combine data
tracts.rings.summary <- rbind(tracts12.rings.summary, tracts22.rings.summary)
# plot
ggplot(tracts.rings.summary,
aes(distance, Mean_Rent, colour=year)) +
geom_point(size=2) +
geom_line(size=1) +
scale_color_manual(values = c("#7bccc4", "#0868ac"))+
labs(title = "Mean rent as a function of distance to subway stations",
subtitle = "San Francisco, 2012 & 2022",
caption = "Figure 3.4") +
plotTheme()
create_plot <- function(data, aes_fill, label) {
ggplot(data) +
geom_sf(data = st_union(tracts22)) +
geom_sf(aes(fill = q5(.data[[aes_fill]]))) +
geom_sf(data = buffer, fill = "transparent", color = "red") +
scale_fill_manual(values = palette5,
labels = qBr(data, aes_fill),
name = label) +
facet_wrap(~year) +
mapTheme() +
labs(title = label) +
theme(plot.title = element_text(size=12, face = "bold"),
strip.text.x = element_text(size = 10, margin = margin(0.05,0,0.05,0, "cm")),
legend.position = "bottom",
legend.key.size = unit(0.2, "cm"),
legend.text = element_text(size = 8),
legend.title = element_blank(),
legend.margin = margin(t = -5)) +
guides(fill = guide_legend(nrow = 1))
}
# Generate each plot using the function
plot_a <- create_plot(allTracts.group, "TotalPop", "Total Population") +
theme(plot.margin = margin(25, 0, 0, 0))
plot_b <- create_plot(allTracts.group, "MedRent.inf", "Median Rent (Real Dollars)") +
theme(plot.margin = margin(25, 0, 0, 0))
plot_c <- create_plot(allTracts.group, "MedHHInc", "Median Household Income") +
theme(plot.margin = margin(10, 0, 20, 0))
plot_d <- create_plot(allTracts.group, "TotalHU", "Total Housing Units") +
theme(plot.margin = margin(10, 0, 20, 0))
# Combine all plots into a grid layout
combined_plots <- plot_grid(plot_a, plot_b, plot_c, plot_d, ncol = 2)
# Add title and caption
final_plot <- ggdraw() +
draw_plot(combined_plots) +
draw_label("Four small-multiple visualizations across time and space", x = 0.5, y = 0.98, size = 16) +
draw_label("Calculation method: quintile breaks (Figure 3.1)", x = 0.5, y = 0.02, fontface = 'italic', size = 9)
# Print the final plot with title and caption
print(final_plot)
allTracts.Summary %>%
gather(Variable, Value, -year, -TOD) %>%
ggplot(aes(year, Value, fill = TOD)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~Variable, scales = "free", ncol=5) +
scale_fill_manual(values = c("#bae4bc", "#43a2ca")) +
labs(title = "Indicator differences across time and space",
caption = "Table 3.2") +
plotTheme() +
theme(legend.position="bottom")
allTracts.Summary <-
st_drop_geometry(allTracts.group) %>%
group_by(year, TOD) %>%
summarize(Rent = round(mean(MedRent, na.rm = T), 2),
Population = round(mean(TotalPop, na.rm = T), 0),
Income = round(mean(MedHHInc, na.rm = T), 2),
Housing = round(mean(TotalHU, na.rm = T), 0)) %>%
ungroup()
allTracts.Summary %>%
gather(Variable, Value, -year, -TOD) %>%
ggplot(aes(year, Value, fill = TOD)) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(~Variable, scales = "free", ncol=5) +
scale_fill_manual(values = c("#bae4bc", "#43a2ca")) +
labs(title = "Indicator differences across time and space",
caption = "Table 3.2") +
plotTheme() +
theme(legend.position="bottom")
allTracts.Diff <- allTracts.Summary %>%
pivot_wider(names_from = TOD, values_from = c(Rent, Population, Income, Housing))
allTracts.Diff <- allTracts.Diff %>%
mutate(Diff_Rent = 100*(Rent_TOD - `Rent_Non-TOD`)/`Rent_Non-TOD`,
Diff_Population = 100*(Population_TOD - `Population_Non-TOD`)/`Population_Non-TOD`,
Diff_Income = 100*(Income_TOD - `Income_Non-TOD`)/`Income_Non-TOD`,
Diff_Housing = 100*(Housing_TOD - `Housing_Non-TOD`)/`Housing_Non-TOD`)%>%
select(year, starts_with("Diff_"))
allTracts.Diff <- allTracts.Diff %>%
rename(Rent = Diff_Rent,
Population = Diff_Population,
Income = Diff_Income,
Housing = Diff_Housing)
allTracts.Summary.Diff <- bind_rows(
allTracts.Summary,
allTracts.Diff %>%
mutate(TOD = "Difference(%)"))
allTracts.Summary.Diff %>%
unite(year.TOD, year, TOD, sep = ": ", remove = T) %>%
gather(Variable, Value, -year.TOD) %>%
mutate(Value = round(Value, 2)) %>%
spread(year.TOD, Value) %>%
kable(caption = "A TOD indicator table across time and space") %>%
kable_styling() %>%
footnote(general_title = "", general = "Table 3.1")
# plot
ggplot(tracts.rings.summary,
aes(distance, Mean_Rent, colour=year)) +
geom_point(size=2) +
geom_line(size=1) +
scale_color_manual(values = c("#7bccc4", "#0868ac"))+
labs(title = "Mean rent as a function of distance to subway stations",
subtitle = "San Francisco, 2012 & 2022",
caption = "Figure 3.4") +
plotTheme()
# plot bubble maps
plot1.3 <- ggplot() +
geom_sf(data = tracts12, fill = "grey95", color = "white")+
geom_sf(data = tracts22, fill = "grey95", color = "white")+
geom_sf(data = Muni_centroids, aes(size = q5(Pop),color = q5(Pop))) +
scale_color_manual(values = scales::alpha(palette5, 0.3)) +
scale_size_manual(values = c(0.5,1.5,2.5,3.5,4.5)) +
facet_wrap(~year) +
mapTheme()+
labs(title = "Graduated Symbol Maps of Population", subtitle = "0.5 mile of each transit station, 2021-2022",
caption="Figure 3.2")+
theme(plot.title = element_text(size=18))
# relate centroids of tracts to the buffer
Centroids.12 <- st_centroid(tracts12)[buffer,] %>%
dplyr::select(-MedHHInc, -TotalHU)
buffer_centroids.12 <- st_join(stopBuffer %>%
mutate(ID = seq(1, nrow(stopBuffer))) %>%
dplyr::select(-mode),
Centroids.12,
join = st_intersects)
Centroids.22 <- st_centroid(tracts22)[buffer,] %>%
dplyr::select(-MedHHInc, -TotalHU)
buffer_centroids.22 <- st_join(stopBuffer %>%
mutate(ID = seq(1, nrow(stopBuffer))) %>%
dplyr::select(-mode),
Centroids.22,
join = st_intersects)
# calculate pop and rent of each station
Muni_centroids.12 <- buffer_centroids.12 %>%
group_by(ID) %>%
summarise(Pop = mean(TotalPop, na.rm = TRUE),
Rent = mean(MedRent, na.rm = TRUE)) %>%
mutate(year = "2012")
Muni_centroids.22 <- buffer_centroids.22 %>%
group_by(ID) %>%
summarise(Pop = mean(TotalPop, na.rm = TRUE),
Rent = mean(MedRent, na.rm = TRUE)) %>%
mutate(year = "2022")
# relate the results to rail stations
Muni_centroids.12 <- cbind(Muni_Metro %>%
dplyr::select(-Line),
Muni_centroids.12 %>%
st_drop_geometry() %>%
dplyr::select(Pop, Rent, year))
Muni_centroids.22 <- cbind(Muni_Metro %>%
dplyr::select(-Line),
Muni_centroids.22 %>%
st_drop_geometry() %>%
dplyr::select(Pop, Rent, year))
Muni_centroids <- rbind(Muni_centroids.12,Muni_centroids.22)
# plot bubble maps
plot1.3 <- ggplot() +
geom_sf(data = tracts12, fill = "grey95", color = "white")+
geom_sf(data = tracts22, fill = "grey95", color = "white")+
geom_sf(data = Muni_centroids, aes(size = q5(Pop),color = q5(Pop))) +
scale_color_manual(values = scales::alpha(palette5, 0.3)) +
scale_size_manual(values = c(0.5,1.5,2.5,3.5,4.5)) +
facet_wrap(~year) +
mapTheme()+
labs(title = "Graduated Symbol Maps of Population", subtitle = "0.5 mile of each transit station, 2021-2022",
caption="Figure 3.2")+
theme(plot.title = element_text(size=18))
plot1.3
plot2.3 <- ggplot() +
geom_sf(data = tracts12, fill = "grey95", color = "white")+
geom_sf(data = tracts22, fill = "grey95", color = "white")+
geom_sf(data = Muni_centroids, aes(size = q5(Rent),color = q5(Rent))) +
scale_color_manual(values = scales::alpha(palette5, 0.3)) +
scale_size_manual(values = c(0.5,1.5,2.5,3.5,4.5)) +
facet_wrap(~year) +
mapTheme()+
labs(title = "Graduated Symbol Maps of Rent", subtitle = "0.5 mile of each transit station, 2021-2022",
caption="Figure 3.3")+
theme(plot.title = element_text(size=18))
plot2.3
